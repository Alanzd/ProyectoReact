{"ast":null,"code":"var _jsxFileName = \"/Users/anamari/UPGRADEHUB/Bootcamp/angular_react/mern/app-front-react/src/componentes/CrearUsuario.js\";\nimport React, { Component } from 'react';\n\nclass CrearUsuario extends\n/*React.*/\nComponent {\n  //this props es el objeto de react con datos publicos\n  //this.state es el objeto de react con datos privados, es decir, \n  //el estado interno del componente. Como en Angular\n  // las  variables miembro de las clases privadas\n  constructor(props) {\n    super(props); //invocamos al constructor del padre\n    // pasandole las propiedades publicas\n    //para evitar el problema del this con Js\n    //con bind() hacemos que en el futuro\n    // this haga referencia a ese metodo this y solo a ese\n    // this es el objeto instanciado de la clase componente\n\n    this.state = {\n      nombre: '',\n      email: '',\n      password: ''\n    };\n    this.onChangeNombre = this.onChangeNombre.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault(); //le quita el funcionamiento que tiene por defecto\n    //todos los sistemas de eventos de js si no le decimos nada\n    //this siempre hace referencia al objeto que llama al evento\n\n    console.log(`datos: ${this.state.email} , ${this.state.password}`);\n  } //metodo invocado por react cada vez que se cambia el valor del input\n  // y se envia un objeto con la informacion del evento\n\n\n  onChangeNombre(evt) {\n    this.setState({\n      nombre: evt.target.value //como parametro recibimos un objeto con la propiedad emial\n      //le asiganmos el valor recibido del evento target.value\n\n    });\n  }\n\n  onChangeEmail(evt) {\n    this.setState({\n      email: evt.target.value //como parametro recibimos un objeto con la propiedad emial\n      //le asiganmos el valor recibido del evento target.value\n\n    });\n  }\n\n  onChangePassword(evt) {\n    this.setState({\n      password: evt.target.value //como parametro recibimos un objeto con la propiedad emial\n      //le asignamos el valor recibido del evento target.value\n\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Formulario crear usuario\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Nombre:\"), React.createElement(\"input\", {\n      type: \"string\",\n      placeholder: \"Aqui tu nombre\",\n      onChange: this.onChangeNombre,\n      value: this.state.nombre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"ejemplo@email.com\",\n      onChange: this.onChangeEmail,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"Password\",\n      placeholder: \"letras y numeros\",\n      onChange: this.onChangePassword,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Registrar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CrearUsuario;","map":{"version":3,"sources":["/Users/anamari/UPGRADEHUB/Bootcamp/angular_react/mern/app-front-react/src/componentes/CrearUsuario.js"],"names":["React","Component","CrearUsuario","constructor","props","state","nombre","email","password","onChangeNombre","bind","onChangeEmail","onChangePassword","onSubmit","evt","preventDefault","console","log","setState","target","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\n\nclass CrearUsuario extends /*React.*/ Component{\n    //this props es el objeto de react con datos publicos\n    //this.state es el objeto de react con datos privados, es decir, \n    //el estado interno del componente. Como en Angular\n    // las  variables miembro de las clases privadas\n\n    constructor (props) {\n        super (props); //invocamos al constructor del padre\n                    // pasandole las propiedades publicas\n\n                    //para evitar el problema del this con Js\n                    //con bind() hacemos que en el futuro\n                    // this haga referencia a ese metodo this y solo a ese\n                    // this es el objeto instanciado de la clase componente\n\n    \n        this.state = {\n            nombre: '',\n            email: '',\n            password: ''\n\n        }\n        this.onChangeNombre = this.onChangeNombre.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this); \n        this.onSubmit = this.onSubmit.bind(this);\n      \n    }\n    onSubmit (evt) {\n        evt.preventDefault();   //le quita el funcionamiento que tiene por defecto\n    //todos los sistemas de eventos de js si no le decimos nada\n    //this siempre hace referencia al objeto que llama al evento\n\n        console.log(`datos: ${this.state.email} , ${this.state.password}`);\n    }\n    \n    //metodo invocado por react cada vez que se cambia el valor del input\n    // y se envia un objeto con la informacion del evento\n    \n    onChangeNombre(evt) {\n        this.setState({\n            nombre: evt.target.value      //como parametro recibimos un objeto con la propiedad emial\n            //le asiganmos el valor recibido del evento target.value\n        });\n\n    }\n    onChangeEmail(evt) {\n        this.setState({\n            email: evt.target.value      //como parametro recibimos un objeto con la propiedad emial\n            //le asiganmos el valor recibido del evento target.value\n        });\n\n    }\n    onChangePassword(evt) {\n        this.setState({\n            password: evt.target.value      //como parametro recibimos un objeto con la propiedad emial\n            //le asignamos el valor recibido del evento target.value\n        });\n\n    }\n    render() {\n    return (\n        <div>\n            <h2>Formulario crear usuario</h2>\n            <form onSubmit= { this.onSubmit}>\n                <div>\n                    <label>Nombre:</label>\n                        <input type= \"string\"\n                        placeholder = 'Aqui tu nombre'\n                        onChange = { this.onChangeNombre }\n                        value= { this.state.nombre}\n                        />\n                        \n                </div>\n                <div>\n                    <label>Email:</label>\n                        <input type= \"email\"\n                        placeholder = \"ejemplo@email.com\"\n                        onChange = { this.onChangeEmail }\n                        value= { this.state.email}\n                        />\n                        \n                </div>\n                <div>\n                    <label>Password:</label>\n                        <input type= \"Password\"\n                        placeholder = \"letras y numeros\"\n                        onChange= { this.onChangePassword }\n                        value = {  this.state.password }\n                        />\n                </div>\n                <div>\n                    <input type= \"submit\" value= \"Registrar\"/>\n                </div>\n                \n            </form>\n        </div>\n    );\n}\n}\nexport default CrearUsuario;    \n\n\n"]},"metadata":{},"sourceType":"module"}